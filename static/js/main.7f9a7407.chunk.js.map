{"version":3,"sources":["components/Table/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["Table","useState","users","setUsers","usersToDisplay","setUsersToDisplay","sortDirection","setSortDirection","searchTerm","setSearchTerm","useEffect","axios","get","then","response","console","log","data","results","sortByNameAsc","sortedUsers","sort","a","b","aValue","name","first","bValue","sortByNameDesc","onSubmit","e","preventDefault","filteredUsers","filter","user","phone","includes","type","placeholder","value","onChange","target","className","onClick","scope","map","index","id","src","picture","thumbnail","alt","last","email","dob","date","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAgIeA,EA3HD,WAAO,IAAD,EAEQC,mBAAS,IAFjB,mBAEXC,EAFW,KAEJC,EAFI,OAG2BF,mBAAS,IAHpC,mBAGXG,EAHW,KAGKC,EAHL,OAIuBJ,mBAAS,OAJhC,mBAIZK,EAJY,KAIGC,EAJH,OAKiBN,mBAAS,IAL1B,mBAKZO,EALY,KAKAC,EALA,KAOfC,qBAAU,WACNC,IAAMC,IAAI,yCAAyCC,MAAK,SAAAC,GACpDC,QAAQC,IAAIF,EAASG,MACrBZ,EAAkBS,EAASG,KAAKC,SAChCf,EAASW,EAASG,KAAKC,cAE3B,IAEP,IAwBMC,EAAgB,WACpB,IACMC,EADU,YAAOlB,GACOmB,MAAK,SAACC,EAAGC,GACtC,IAAMC,EAASF,EAAEG,KAAKC,MAChBC,EAASJ,EAAEE,KAAKC,MACtB,OAAGF,EAASG,GACA,EAERH,EAASG,EACF,EAEJ,KAEPZ,QAAQC,IAAII,GACZf,EAAkBe,IAGfQ,EAAiB,WACrB,IACMR,EADU,YAAOlB,GACOmB,MAAK,SAACC,EAAGC,GACtC,IAAMC,EAASF,EAAEG,KAAKC,MAChBC,EAASJ,EAAEE,KAAKC,MACtB,OAAGF,EAASG,GACA,EAERH,EAASG,EACF,EAEJ,KAEPZ,QAAQC,IAAII,GACZf,EAAkBe,IAIrB,OACE,gCACI,8BACI,uBAAMS,SA9DK,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAgB9B,EAAM+B,QAAO,SAAAC,GAChC,OAAOA,EAAKC,MAAMC,SAAS5B,MAG9BH,EAAkB2B,IAwDZ,UACD,uBAAOK,KAAK,OACXC,YAAY,+BACZb,KAAK,aACLc,MAAO/B,EACPgC,SAAU,SAACV,GACXrB,EAAcqB,EAAEW,OAAOF,UAGxB,wBAAQG,UAAU,kBAAlB,oBACA,wBAAQA,UAAU,oBAAoBC,QArD3B,WAChBtC,EAAkBH,IAoD+CmC,KAAK,SAAjE,wBAGH,8BACA,wBAAOK,UAAU,sBAAjB,UACF,gCACI,+BACE,oBAAIE,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAMD,QAxEP,WACK,QAAlBrC,GACCa,IACAZ,EAAiB,UAEjBqB,IACArB,EAAiB,SAkEd,kBACA,oBAAIqC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAGN,gCAEGxC,EAAeyC,KAAI,SAACX,EAAMY,GAAP,OAChB,+BACE,oBAAIF,MAAM,MAAV,SAAiBV,EAAKa,GAAGD,QACzB,6BAAI,qBAAKE,IAAKd,EAAKe,QAAQC,UAAWC,IAAKjB,EAAKT,KAAKC,UAErD,+BAAKQ,EAAKT,KAAKC,MAAf,IAAuBQ,EAAKT,KAAK2B,QACjC,6BAAKlB,EAAKmB,QACV,6BAAKnB,EAAKC,QACV,6BAAKD,EAAKoB,IAAIC,SAPPT,iBCjGNU,MAZf,WACE,OACE,qBAAKd,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,WCMKe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7f9a7407.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport { findAllByDisplayValue } from '@testing-library/react';\r\n\r\n\r\nconst Table = () => {\r\n  \r\n  const [users, setUsers] = useState([ ]);\r\n  const [usersToDisplay, setUsersToDisplay] =  useState([]);\r\n  const[sortDirection, setSortDirection] = useState(\"asc\");\r\n  const[searchTerm, setSearchTerm] = useState(\"\");\r\n   \r\n     useEffect(() => {\r\n         axios.get(\"https://randomuser.me/api/?results=50\").then(response => {\r\n             console.log(response.data);\r\n             setUsersToDisplay(response.data.results);\r\n             setUsers(response.data.results);\r\n         });\r\n     } , []);\r\n   \r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const filteredUsers = users.filter(user => {\r\n         return user.phone.includes(searchTerm);\r\n      });\r\n\r\n      setUsersToDisplay(filteredUsers);\r\n  } \r\n  \r\n  const sortByName = ()=> {\r\n     if(sortDirection === \"asc\"){\r\n         sortByNameAsc();\r\n         setSortDirection(\"desc\");\r\n     }else{\r\n         sortByNameDesc();\r\n         setSortDirection(\"asc\");\r\n     }\r\n  };   \r\n       \r\n  const handleReset = () => {\r\n      setUsersToDisplay(users);\r\n  }\r\n\r\n\r\n  const sortByNameAsc = () => {\r\n    const  tempUsers = [...users];\r\n    const sortedUsers = tempUsers.sort((a, b) => {\r\n     const aValue = a.name.first;\r\n     const bValue = b.name.first;\r\n     if(aValue < bValue){\r\n         return -1;\r\n     }\r\n     if (aValue > bValue) {\r\n         return 1;\r\n     }\r\n     return 0;        \r\n    });\r\n     console.log(sortedUsers); \r\n     setUsersToDisplay(sortedUsers);       \r\n  };\r\n\r\n  const sortByNameDesc = () => {\r\n    const  tempUsers = [...users];\r\n    const sortedUsers = tempUsers.sort((a, b) => {\r\n     const aValue = a.name.first;\r\n     const bValue = b.name.first;\r\n     if(aValue > bValue){\r\n         return -1;\r\n     }\r\n     if (aValue < bValue) {\r\n         return 1;\r\n     }\r\n     return 0;        \r\n    });\r\n     console.log(sortedUsers); \r\n     setUsersToDisplay(sortedUsers);       \r\n  };\r\n\r\n\r\n  return (  \r\n    <div>\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n           <input type=\"text\"\r\n            placeholder=\"Enter Phone number to filter\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            onChange={(e) =>{\r\n            setSearchTerm(e.target.value);\r\n            }}\r\n            ></input> \r\n           <button className=\"btn-btn-primary\">Search</button>\r\n           <button className=\"btn btn-secondary\" onClick={handleReset} type=\"button\">Reset</button>\r\n           </form>\r\n        </div>\r\n        <div>\r\n        <table className=\"table table-striped\">\r\n      <thead>\r\n          <tr>\r\n            <th scope=\"col\">ID</th>\r\n            <th scope=\"col\">photo</th>\r\n            <th scope=\"col\" onClick={sortByName}>name</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Phone</th>\r\n            <th scope=\"col\">DOB</th>\r\n          </tr>\r\n      </thead>\r\n      <tbody>\r\n\r\n        {usersToDisplay.map((user, index) => (\r\n            <tr key={index}>\r\n              <th scope=\"row\">{user.id.index}</th>\r\n              <td><img src={user.picture.thumbnail} alt={user.name.first}></img>\r\n              </td>\r\n              <td>{user.name.first} {user.name.last}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.phone}</td>\r\n              <td>{user.dob.date}</td>\r\n            </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>          \r\n        </div>\r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default Table;","import Table from \"./components/Table/Table\";\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <Table />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}